@mixin flex-center {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
@mixin flex-between {
    align-items: center;
    display: flex;
    justify-content: space-between;
}
@mixin flex-around {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}
@mixin flex-end {
    align-items: flex-end;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
@mixin flex-start {
    align-items: flex-start;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}
@mixin flex-right {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-end;
}

@mixin active-btn (){
  transform: scale(0.9);
}

@mixin vertical-displacement {
  transition: cubic-bezier(0.455, 0.03, 0.515, 0.955);
	transition-property: height;
	transition-duration: 450ms;
}

@mixin box-sizing($param) {
	-moz-box-sizing: $param;
  -webkit-box-sizing: $param;
  box-sizing: $param;
}

@mixin css3-prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	-khtml-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}

@mixin transition($properties...) {
	@if length($properties) >= 1 {
		@include css3-prefix("transition", $properties);
  }

	@else {
		@include css3-prefix("transition",  "all .3s ease-in-out 0s");
	}
}

@mixin opacity($opacity: 0.5) {
	$opacityMultiplied: ($opacity * 100);

	filter: alpha(opacity=$opacityMultiplied);
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
	@include css3-prefix("opacity", $opacity);
}

@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin border-radius($radius: 3px) {
	@include css3-prefix("border-radius", $radius);
}

@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
	@if ($inset != "") {
		@include css3-prefix("box-shadow", $inset $x $y $blur $color);
	} @else {
		@include css3-prefix("box-shadow", $x $y $blur $color);
	}
}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
  @include css3-prefix("text-shadow", $x $y $blur $color);
}

@mixin transform($params) {
	@include css3-prefix("transform", $params);
}

@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
		$color-stops: $direction, $color-stops;
		$direction: 180deg;
	}
	
	background: nth(nth($color-stops, 1), 1);
	background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
	background: linear-gradient($direction, $color-stops);
}

@mixin display-flex() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}